
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 22tarpat
 */

public class EditPaitentScreen extends javax.swing.JFrame {

    /**
     * Creates new form EditPaitentScreen
     */
    
    //Instance variables used to retrieve the results of a query to get data from tblPatients, and then to store that data in the patArrObj as an ArrayList
    private dbConnect dbObj;
    private ResultSet rs;
    private PatientArray patArrObj;
    public EditPaitentScreen() 
    {
        initComponents();
        //hiding the components relevant for new data capture, these components should only be visible once the user clicks one of the "edit xxx" buttons
        lblEnterNewInfo.setVisible(false);
        txtNewInfo.setVisible(false);
        btnUpdatePt.setVisible(false);
        
        //The following code populates the combo box with all of the patients from the database so that the user can choose which patient they would like to edit
       
        try { 
            dbObj = new dbConnect();
            ResultSet tempRS = dbObj.executeQry(createQuery.getData("tblPatient"));
            tempRS.next();
            rs = tempRS;
        } catch (SQLException ex) {
            Logger.getLogger(EditPaitentScreen.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("the problem is here");
        }
        patArrObj = new PatientArray(rs);
        
        String optionArr[] = patArrObj.getNameAndID();
        for (int i = 0; i < optionArr.length; i++)
        {
            cmbPatientList.addItem(optionArr[i]);
        }
    }
    
    //The following method makes the components necessary for data capture of new data to visible
    public void setComponentsVisible()
    {
        lblEnterNewInfo.setVisible(true);
        txtNewInfo.setVisible(true);
        btnUpdatePt.setVisible(true);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlEditPatients = new javax.swing.JPanel();
        lblHeading = new javax.swing.JLabel();
        lblPatientSelect = new javax.swing.JLabel();
        cmbPatientList = new javax.swing.JComboBox<>();
        btnEditIDNum = new javax.swing.JButton();
        btnEditFName = new javax.swing.JButton();
        btnEditSurname = new javax.swing.JButton();
        lblEnterNewInfo = new javax.swing.JLabel();
        txtNewInfo = new javax.swing.JTextField();
        btnUpdatePt = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblHeading.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblHeading.setText("Edit Patients");

        lblPatientSelect.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        lblPatientSelect.setText("Select the patient you would like to edit:");

        cmbPatientList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPatientListActionPerformed(evt);
            }
        });

        btnEditIDNum.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnEditIDNum.setText("Edit ID Number");
        btnEditIDNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditIDNumActionPerformed(evt);
            }
        });

        btnEditFName.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnEditFName.setText("Edit First Name");
        btnEditFName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditFNameActionPerformed(evt);
            }
        });

        btnEditSurname.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnEditSurname.setText("Edit Surname");
        btnEditSurname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditSurnameActionPerformed(evt);
            }
        });

        lblEnterNewInfo.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        lblEnterNewInfo.setText("Enter the new <information>");

        btnUpdatePt.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnUpdatePt.setText("Update patient");
        btnUpdatePt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePtActionPerformed(evt);
            }
        });

        btnHelp.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        btnHelp.setText("Help");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHelpActionPerformed(evt);
            }
        });

        btnBack.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEditPatientsLayout = new javax.swing.GroupLayout(pnlEditPatients);
        pnlEditPatients.setLayout(pnlEditPatientsLayout);
        pnlEditPatientsLayout.setHorizontalGroup(
            pnlEditPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditPatientsLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlEditPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeading)
                    .addGroup(pnlEditPatientsLayout.createSequentialGroup()
                        .addComponent(lblPatientSelect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPatientList, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnEditFName)
                    .addComponent(btnEditSurname)
                    .addComponent(btnEditIDNum)
                    .addComponent(lblEnterNewInfo)
                    .addComponent(txtNewInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdatePt)
                    .addComponent(btnHelp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlEditPatientsLayout.setVerticalGroup(
            pnlEditPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEditPatientsLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(lblHeading)
                .addGap(18, 18, 18)
                .addGroup(pnlEditPatientsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientSelect)
                    .addComponent(cmbPatientList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(btnEditFName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditSurname)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditIDNum)
                .addGap(18, 18, 18)
                .addComponent(lblEnterNewInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNewInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdatePt)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(btnHelp)
                .addGap(9, 9, 9)
                .addComponent(btnBack)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlEditPatients, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlEditPatients, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPatientListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPatientListActionPerformed

    }//GEN-LAST:event_cmbPatientListActionPerformed

    private void btnEditIDNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditIDNumActionPerformed
        //The following code reveals the components necessary to edit a patients ID number
        lblEnterNewInfo.setText("Enter the new ID number:");
        setComponentsVisible();
    }//GEN-LAST:event_btnEditIDNumActionPerformed

    private void btnEditFNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditFNameActionPerformed
        //The following code reveals the components necessary to edit a patients first name
        lblEnterNewInfo.setText("Enter the new first name of the patient:");
        setComponentsVisible();
    }//GEN-LAST:event_btnEditFNameActionPerformed

    private void btnEditSurnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditSurnameActionPerformed
        //The following code reveals the components necessary to edit a patients surname
        lblEnterNewInfo.setText("Enter the new surname of the patient:");
        setComponentsVisible();
    }//GEN-LAST:event_btnEditSurnameActionPerformed

    private void btnUpdatePtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePtActionPerformed
        //The following code captures the new data to update and then updates the relevant data in the database
        
        //This code extracts the ID number of the selected patient so that the condition for the update query can be created
        String option = cmbPatientList.getSelectedItem().toString();
        int index = option.lastIndexOf(" ");
        String IDNum = option.substring(index);
        
        //This code extracts the user input of the new data and creates the condition for the update query
        String newData = txtNewInfo.getText();
        String condition = "IDNumber = '" + IDNum + "'";
        
        //These if statements determine which field in the database needs to be updated and then uses the .updatePatient() method accordingly to update the database using the new data
        if (lblEnterNewInfo.getText().contains("ID number"))
        {
            Patient.updatePatient("IDNumber", newData, condition);

        }
        else if (lblEnterNewInfo.getText().contains("first name"))
        {
            Patient.updatePatient("FirstName", newData, condition);
        }
        else if (lblEnterNewInfo.getText().contains("surname"))
        {
            Patient.updatePatient("Surname", newData, condition);
        }
    }//GEN-LAST:event_btnUpdatePtActionPerformed

    private void btnHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHelpActionPerformed
        //This code takes the user to the help screen
        new HelpScreen().setVisible(true);
    }//GEN-LAST:event_btnHelpActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        //This code takes the user back to the patients screen
        this.setVisible(false);
        new PatientsScreen().setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditPaitentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditPaitentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditPaitentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditPaitentScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditPaitentScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnEditFName;
    private javax.swing.JButton btnEditIDNum;
    private javax.swing.JButton btnEditSurname;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnUpdatePt;
    private javax.swing.JComboBox<String> cmbPatientList;
    private javax.swing.JLabel lblEnterNewInfo;
    private javax.swing.JLabel lblHeading;
    private javax.swing.JLabel lblPatientSelect;
    private javax.swing.JPanel pnlEditPatients;
    private javax.swing.JTextField txtNewInfo;
    // End of variables declaration//GEN-END:variables
}
